"迭代统计查询请求"
input IterationStatReq{
	"迭代id"
	iterationId: Int64!
	"开始时间"
	startDate: Time
	"结束时间"
	endDate: Time
}

"迭代统计结构体"
type IterationStat{
	"主键"
	id:Int64!
	"组织id,应该是全局的,因此填0"
	orgId:Int64!
	"项目id"
	projectId:Int64!
	"迭代id"
	iterationId:Int64!
	"问题总数"
	issueCount:Int!
	"未开始问题数"
	issueWaitCount:Int!
	"进行中问题数"
	issueRunningCount:Int!
	"已逾期问题数"
	issueOverdueCount:Int!
	"已完成问题数"
	issueEndCount:Int!
	"需求总数"
	demandCount:Int!
	"未开始需求数"
	demandWaitCount:Int!
	"进行中需求数"
	demandRunningCount:Int!
	"已逾期需求数"
	demandOverdueCount:Int!
	"已完成需求数"
	demandEndCount:Int!
	"故事点总数"
	storyPointCount:Int!
	"未开始故事点数"
	storyPointWaitCount:Int!
	"进行中故事点数"
	storyPointRunningCount:Int!
	"已逾期故事点数"
	storyPointOverdueCount:Int!
	"已完成故事点数"
	storyPointEndCount:Int!
	"任务总数"
	taskCount:Int!
	"未开始任务数"
	taskWaitCount:Int!
	"进行中任务数"
	taskRunningCount:Int!
	"已逾期任务数"
	taskOverdueCount:Int!
	"已完成任务数"
	taskEndCount:Int!
	"缺陷总数"
	bugCount:Int!
	"未开始缺陷数"
	bugWaitCount:Int!
	"进行中缺陷数"
	bugRunningCount:Int!
	"已逾期缺陷数"
	bugOverdueCount:Int!
	"已完成缺陷数"
	bugEndCount:Int!
	"测试任务总数"
	testtaskCount:Int!
	"未开始测试任务数"
	testtaskWaitCount:Int!
	"进行中测试任务数"
	testtaskRunningCount:Int!
	"已逾期测试任务数"
	testtaskOverdueCount:Int!
	"已完成测试任务数"
	testtaskEndCount:Int!
	"扩展"
	ext:String!
	"统计日期"
	statDate:Time!
	"项目状态,从状态表取"
	status:Int64!
	"创建人"
	creator:Int64!
	"创建时间"
	createTime:Time!
}

"创建迭代统计请求结构体"
input CreateIterationStatReq{
	"组织id,应该是全局的,因此填0"
	orgId:Int64!
	"项目id"
	projectId:Int64!
	"迭代id"
	iterationId:Int64!
	"问题总数"
	issueCount:Int!
	"未开始问题数"
	issueWaitCount:Int!
	"进行中问题数"
	issueRunningCount:Int!
	"已完成问题数"
	issueEndCount:Int!
	"需求总数"
	demandCount:Int!
	"未开始需求数"
	demandWaitCount:Int!
	"进行中需求数"
	demandRunningCount:Int!
	"已完成需求数"
	demandEndCount:Int!
	"故事点总数"
	storyPointCount:Int!
	"未开始故事点数"
	storyPointWaitCount:Int!
	"进行中故事点数"
	storyPointRunningCount:Int!
	"已完成故事点数"
	storyPointEndCount:Int!
	"任务总数"
	taskCount:Int!
	"未开始任务数"
	taskWaitCount:Int!
	"进行中任务数"
	taskRunningCount:Int!
	"已完成任务数"
	taskEndCount:Int!
	"缺陷总数"
	bugCount:Int!
	"未开始缺陷数"
	bugWaitCount:Int!
	"进行中缺陷数"
	bugRunningCount:Int!
	"已完成缺陷数"
	bugEndCount:Int!
	"测试任务总数"
	testtaskCount:Int!
	"未开始测试任务数"
	testtaskWaitCount:Int!
	"进行中测试任务数"
	testtaskRunningCount:Int!
	"已完成测试任务数"
	testtaskEndCount:Int!
	"扩展"
	ext:String!
	"统计日期"
	statDate:Time!
	"项目状态,从状态表取"
	status:Int64!
	"创建人"
	creator:Int64!
	"创建时间"
	createTime:Time!
	"更新人"
	updator:Int64!
	"更新时间"
	updateTime:Time!
	"乐观锁"
	version:Int!
	"是否删除,1是,2否"
	isDelete:Int!
}

"更新迭代统计请求结构体"
input UpdateIterationStatReq{
	"主键"
	id:Int64!
	"组织id,应该是全局的,因此填0"
	orgId:Int64!
	"项目id"
	projectId:Int64!
	"迭代id"
	iterationId:Int64!
	"问题总数"
	issueCount:Int!
	"未开始问题数"
	issueWaitCount:Int!
	"进行中问题数"
	issueRunningCount:Int!
	"已完成问题数"
	issueEndCount:Int!
	"需求总数"
	demandCount:Int!
	"未开始需求数"
	demandWaitCount:Int!
	"进行中需求数"
	demandRunningCount:Int!
	"已完成需求数"
	demandEndCount:Int!
	"故事点总数"
	storyPointCount:Int!
	"未开始故事点数"
	storyPointWaitCount:Int!
	"进行中故事点数"
	storyPointRunningCount:Int!
	"已完成故事点数"
	storyPointEndCount:Int!
	"任务总数"
	taskCount:Int!
	"未开始任务数"
	taskWaitCount:Int!
	"进行中任务数"
	taskRunningCount:Int!
	"已完成任务数"
	taskEndCount:Int!
	"缺陷总数"
	bugCount:Int!
	"未开始缺陷数"
	bugWaitCount:Int!
	"进行中缺陷数"
	bugRunningCount:Int!
	"已完成缺陷数"
	bugEndCount:Int!
	"测试任务总数"
	testtaskCount:Int!
	"未开始测试任务数"
	testtaskWaitCount:Int!
	"进行中测试任务数"
	testtaskRunningCount:Int!
	"已完成测试任务数"
	testtaskEndCount:Int!
	"扩展"
	ext:String!
	"统计日期"
	statDate:Time!
	"项目状态,从状态表取"
	status:Int64!
	"创建人"
	creator:Int64!
	"创建时间"
	createTime:Time!
	"更新人"
	updator:Int64!
	"更新时间"
	updateTime:Time!
	"乐观锁"
	version:Int!
	"是否删除,1是,2否"
	isDelete:Int!
}

"删除迭代统计请求结构体"
input DeleteIterationStatReq{
	"主键"
	id:Int64!
}

"迭代统计列表响应结构体"
type IterationStatList{
    total:Int64!
    list:[IterationStat!]
}
